# Generated by Django 5.1.6 on 2025-04-29 20:26

import uuid

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("email", models.EmailField(blank=True, max_length=254, null=True)),
                ("student_number", models.CharField(max_length=6)),
                ("usos_id", models.IntegerField(blank=True, null=True)),
                ("first_name", models.CharField(max_length=30)),
                ("last_name", models.CharField(max_length=51)),
                (
                    "sex",
                    models.CharField(
                        blank=True,
                        choices=[("M", "MALE"), ("F", "FEMALE")],
                        max_length=1,
                        null=True,
                    ),
                ),
                (
                    "student_status",
                    models.IntegerField(
                        blank=True,
                        choices=[
                            (0, "NOT_STUDENT"),
                            (1, "INACTIVE_STUDENT"),
                            (2, "ACTIVE_STUDENT"),
                        ],
                        null=True,
                    ),
                ),
                (
                    "staff_status",
                    models.IntegerField(
                        blank=True,
                        choices=[
                            (0, "NOT_STAFF"),
                            (1, "NON_ACADEMIC_STAFF"),
                            (2, "ACADEMIC_TEACHER"),
                        ],
                        null=True,
                    ),
                ),
                ("photo_url", models.URLField(blank=True, null=True)),
                ("overriden_photo_url", models.URLField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "access_token",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "access_token_secret",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("is_superuser", models.BooleanField(default=False)),
                ("is_staff", models.BooleanField(default=False)),
                (
                    "hide_profile",
                    models.BooleanField(
                        default=False,
                        help_text="Hide profile from other users in search and leaderboards, user will still be able to be added by student_number",
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Term",
            fields=[
                (
                    "id",
                    models.CharField(max_length=100, primary_key=True, serialize=False),
                ),
                ("name", models.CharField(blank=True, max_length=100, null=True)),
                ("start_date", models.DateField(blank=True, null=True)),
                ("end_date", models.DateField(blank=True, null=True)),
                ("finish_date", models.DateField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="UserSettings",
            fields=[
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        related_name="settings",
                        serialize=False,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                ("sync_progress", models.BooleanField(default=True)),
                ("initial_reoccurrences", models.IntegerField(default=1)),
                ("wrong_answer_reoccurrences", models.IntegerField(default=1)),
            ],
        ),
        migrations.CreateModel(
            name="EmailLoginToken",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("otp_code", models.CharField(max_length=6)),
                ("token", models.UUIDField(default=uuid.uuid4, unique=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("expires_at", models.DateTimeField()),
                ("retry_count", models.IntegerField(default=0)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="StudyGroup",
            fields=[
                (
                    "id",
                    models.CharField(max_length=100, primary_key=True, serialize=False),
                ),
                ("name", models.CharField(max_length=255)),
                (
                    "members",
                    models.ManyToManyField(
                        related_name="study_groups", to=settings.AUTH_USER_MODEL
                    ),
                ),
                (
                    "term",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="study_groups",
                        to="users.term",
                    ),
                ),
            ],
        ),
    ]
